@page "/friends";
@using BorovClub.Data;
@using BorovClub.Models;
@inject FriendshipService friendsService;

<div class="dropdown">
    <select @onchange="@OptionSelected">
        <option value="Friends">Friends</option>
        <option value="Requests">Requests</option>
    </select>
</div>

@switch (currentType)
{
    case "Friends":
        {
            <h2>Friends</h2>
            @if (friendsList != null)
            {
                foreach (ApplicationUser user in friendsList)
                {
                    <hr class="divider" />
                    <div class="friend">
                        <img src="@user.AvatarPath" class="avatar" />
                        <div class="info">
                            <a href="@("/" + @user.UserName)" class="friend-name">
                                @user.FirstName @user.LastName
                            </a>
                            <a class="send-message" href="@("/messages/" + @user.UserName)">
                                Send message
                            </a>
                        </div>
                    </div>
                    <hr class="divider" />
                }
            }
            break;
        }

    case "Requests":
        {
            <h2>Requests</h2>
            @if (requestsList != null)
            {
                foreach (ApplicationUser user in requestsList)
                {
                    <hr class="divider" />
                    <div class="request">
                        <img src="@user.AvatarPath" class="avatar" />
                        <div class="info">
                            <a href="@("/" + @user.UserName)" class="friend-name">
                                @user.FirstName @user.LastName
                            </a>
                            <button class="add-btn" @onclick="@(e => AddUser(user))">
                                Add to friends
                            </button>
                        </div>
                    </div>
                    <hr class="divider" />
                }
            }
            break;
        }
}


@code {
    private IList<ApplicationUser> friendsList;
    private IList<ApplicationUser> requestsList;
    private string currentType = "Friends";

    protected override void OnInitialized()
    {
        friendsList = friendsService.GetFriends();
        requestsList = friendsService.GetRequests();
    }

    public async Task AddUser(ApplicationUser reciever)
    {
        await friendsService.AddFriend(reciever);
        friendsList.Add(reciever);
        requestsList.Remove(reciever);
    }

    private void OptionSelected(ChangeEventArgs e)
    {
        currentType = e.Value.ToString();
        StateHasChanged();
    }
}
